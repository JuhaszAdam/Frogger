//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : JuhaszAdamFrogger
//  @ File Name : Playground.cpp
//  @ Date : 2015.11.14.
//  @ Author : Juhász Ádám
//
//

#include "Playground.h"
#include "Console.h"
#include "MyConsole.h"
#include <conio.h>
#include <iostream>

using namespace std;

Playground* Playground::instance=NULL;

Playground::Playground()
{
    srand(time(NULL));

    active = true;
    victory = false;

    for(int i=0; i<=4; i++)
    {
        carList.push_back(*new Car(2+i*13, 5, 90, FCIR|BCR, '=', Left));
        carList.push_back(*new Car(6+i*13, 7, 80, FCIB|BCB, '=', Left));
        carList.push_back(*new Car(3+i*13, 11, 80, FCIY|BCY, '=', Right));
        carList.push_back(*new Car(12+i*13, 13, 65, FCIC|BCC, '=', Right));
    }

    console = new Console();
    console->setSize(80,25);
    init();
    console->drawBuffer();
};

void Playground::tick()
{
    if (kbhit())
    {
        switch(getch())
        {
        case 'w':
            frog.move(Up);
            break;
        case 'a':
            frog.move(Left);
            break;
        case 'd':
            frog.move(Right);
            break;
        case 's':
            frog.move(Down);
            break;
        }
    }

    for (int i=0; i<carList.size(); i++)
    {
        carList[i].tick();
    }

    console->clearScreen();
    drawWorld();

    frog.render();
    for (int i=0; i<carList.size(); i++)
    {
        carList[i].draw();
    }
    console->drawBuffer();
    round++;
}

void Playground::drawWorld()
{
    console->fillArea(2, 3, 78, 5, FCIG|BCG , '"');
    console->fillArea(2, 5, 78, 6, FCN|BCW , ' ');
    console->fillArea(2, 6, 78, 7, FCIW|BCW , '_');
    console->fillArea(2, 7, 78, 9, FCN|BCW , ' ');
    console->fillArea(2, 9, 78, 11, FCIG|BCG , '"');
    console->fillArea(2, 11, 78, 12, FCN|BCW , ' ');
    console->fillArea(2, 12, 78, 13, FCIW|BCW, '_');
    console->fillArea(2, 13, 78, 15, FCN|BCW , ' ');
    console->fillArea(2, 15, 78, 17, FCIG|BCG  , '"');
}

void Playground::init()
{
    console->clearScreen();
    active = true;
    victory = false;
    frog.position.setCoordinates(38,15);
}
